/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2022-02-13 20:25:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.mail.Transport;
import java.util.Properties;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.InternetAddress;
import javax.mail.Message;
import javax.mail.Session;
import java.sql.*;

public final class order_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.mail.internet.InternetAddress");
    _jspx_imports_classes.add("javax.mail.Message");
    _jspx_imports_classes.add("java.util.Properties");
    _jspx_imports_classes.add("javax.mail.Transport");
    _jspx_imports_classes.add("javax.mail.Session");
    _jspx_imports_classes.add("javax.mail.internet.MimeMessage");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        \n");
      out.write("        ");


Class.forName("com.mysql.jdbc.Driver");
Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/products", "root", "");
Statement st=conn.createStatement();
String oid = session.getAttribute("oid").toString();
int o=Integer.parseInt(oid);
//ResultSet rs=st.executeQuery("select cart.Model_Name,cart.Quantity,cart.Total,orders.email,orders.rec_name,orders.rec_address,orders.rec_mob,orders.date from cart,orders where cart.username=orders.username and orders.order_id="+o+"");
ResultSet rs=st.executeQuery("select email,rec_name,rec_address,date,Model_name,Quantity,Total from orders where order_id="+o+"");
while(rs.next())
{
//int t=Integer.parseInt(rs.getString(3));
//int quantity=Integer.parseInt(rs.getString(2));
//String modname=rs.getString(1);
//String email=rs.getString(4);
//String recname=rs.getString(5);
//String add=rs.getString(6);
//String mob=rs.getString(7);
//String date=rs.getString(8);

String email=rs.getString(1);
String rec_name=rs.getString(2);
String rec_add=rs.getString(3);
String date=rs.getString(4);
String modname=rs.getString(5);
int qty=rs.getInt(6);
int tot=rs.getInt(7);

final String username="redecordesigners53@gmail.com";
 final String password="JanhviDurva@123456789";
 String smtphost="smtp.gmail.com";
 String compression="Redecor Order Confirmation";
 String from=username;
 String to=email;
 //String body="hello!! your Order is placed successfully for  Receiver: "+recname+" <br>Mobile no. "+recmob+"<br><br> You will recieve this on the address:"+recadd+"";
 //String body="hello!! your Order is placed successfully for  Receiver: "+recname+" Mobile no. "+mob+" Model Name:"+modname+" Quantity:"+quantity+" Total:"+t+" Date:"+date+" You will recieve this on the address:"+add+" Your oder will be delivered in 2-3 weeks ";
 
 String body="hello!! your Order is placed successfully for  Receiver: "+rec_name+"  Model Name:"+modname+" Quantity:"+qty+" Total:"+tot+" Date:"+date+" You will recieve this on the address:"+rec_add+" Your oder will be delivered in 2-3 weeks ";
 
 Transport myTransport=null;
 
 try{
 Properties props=System.getProperties();
 props.put("mail.smtp.user", username);
 props.put("mail.smtp.host","smtp.gmail.com");
 props.put("mail.smtp.port","465");//465
 props.put("mail.smtp.starttls.enable","true");
 props.put("mail.smtp.debug", "true");
 props.put("mail.smtp.auth", "true");
 props.put("mail.smtp.socketFactory.port","465");
 props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
 props.put("mail.smtp.socketFactory.fallback", "false");
 
 // Session mailSession =Session.getDefaultInstance(props,null);
 Session mailSession = Session.getInstance(props,new javax.mail.Authenticator() {
 protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
 return new javax.mail.PasswordAuthentication(username, username);
 }
 });
 Message msg= new MimeMessage(mailSession);
 msg.setFrom(new InternetAddress(from));
InternetAddress[] address={new InternetAddress(to)};
 msg.setRecipients(Message.RecipientType.TO,address);
 msg.setSubject(compression);
 msg.setText(body);
 msg.setSentDate(new java.util.Date());
 
 
 myTransport=mailSession.getTransport("smtp");
 myTransport.connect(smtphost,username,password);
 msg.saveChanges();
 myTransport.sendMessage(msg,msg.getAllRecipients());
 myTransport.close();
 
 }
 catch(Exception e){
 e.printStackTrace();
 out.println(e);
 } }
 out.println("<script>alert('Confirmation mail sent.');window.location.assign('product_view.jsp');</script>"); 
    

      out.write(" \n");
      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("<!--        %>-->\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
