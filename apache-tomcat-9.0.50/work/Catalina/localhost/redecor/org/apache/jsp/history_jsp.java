/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2022-02-14 05:39:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class history_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Order History</title>\n");
      out.write("        \n");
      out.write("        <link rel=\"stylesheet\" href=\"css/vendor.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/styles.css\">\n");
      out.write("        \n");
      out.write("        <style>\n");
      out.write("            body {\n");
      out.write("                background:url(feed-bg.jfif);\n");
      out.write("                background-size: 2000px 700px;\n");
      out.write("                opacity:20;\n");
      out.write("                filter:alpha(opacity=10);\n");
      out.write("                height:2000px;\n");
      out.write("                width:2000px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            table {\n");
      out.write("                top: 150px;\n");
      out.write("                left:100px;\n");
      out.write("                position:absolute;\n");
      out.write("                width:1320px; \n");
      out.write("                border: 2px solid black;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            td,tr,th {\n");
      out.write("                border: 2px solid black;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            h1 {\n");
      out.write("                position:absolute;\n");
      out.write("                left:500px;\n");
      out.write("                top:15px;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body id=\"top\">\n");
      out.write("        \n");
      out.write("        <div id=\"preloader\">\n");
      out.write("        <div id=\"loader\">\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("    <!-- page wrap\n");
      out.write("    ================================================== -->\n");
      out.write("    <div id=\"page\" class=\"s-pagewrap\">\n");
      out.write("\n");
      out.write("\n");
      out.write("        <!-- # site header \n");
      out.write("        ================================================== -->\n");
      out.write("        <header class=\"s-header\">\n");
      out.write("\n");
      out.write("            <div class=\"s-header__logo\">\n");
      out.write("                <a class=\"logo\" href=\"index.jsp\">\n");
      out.write("                    <img src=\"images/logo.svg\" alt=\"Homepage\">\n");
      out.write("                </a>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            <a class=\"s-header__menu-toggle\" href=\"#0\">\n");
      out.write("                <span class=\"s-header__menu-text\">Menu</span>\n");
      out.write("                <span class=\"s-header__menu-icon\"></span>\n");
      out.write("            </a>\n");
      out.write("\n");
      out.write("            <nav class=\"s-header__nav\">\n");
      out.write("\n");
      out.write("                <a href=\"#0\" class=\"s-header__nav-close-btn\" title=\"close\"><span>Close</span></a>\n");
      out.write("                <h3>Redecor.</h3>\n");
      out.write("\n");
      out.write("                <ul class=\"s-header__nav-list\">\n");
      out.write("                    <li><h3>Welcome,");
      out.print(session.getAttribute("user_name"));
      out.write("</h3></li>\n");
      out.write("                    <li><a href=\"feedback.html\" >Feedback</a></li>\n");
      out.write("                    <li><a href=\"appointment.html\">Appointment</a></li>\n");
      out.write("                    <li><a href=\"product_view.jsp\">Shop Here</a></li>\n");
      out.write("                    <li><a href=\"index.jsp#contact\">Contact</a></li>\n");
      out.write("                    <li><a href=\"logout.jsp\">Logout</a></li>\n");
      out.write("                </ul>\n");
      out.write("\n");
      out.write("            </nav>\n");
      out.write("\n");
      out.write("        </header>\n");
      out.write("        \n");
      out.write("        <h1> YOUR ORDER HISTORY ! </h1>\n");
      out.write("        \n");
      out.write("        ");

        Class.forName("com.mysql.jdbc.Driver");
Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/products", "root", "");


    
Statement st=conn.createStatement();
ResultSet rs=st.executeQuery("select rec_address,date,status,Model_name,Quantity,Total from orders where username='"+session.getAttribute("user_name")+"'");

out.println("<table border=1 bordercolor=black align='center' cellspacing=20 cellpadding=20 ><tr><td>Sr. No</td><td>Model_Name</td><td>Quantity</td><td>Total</td><td>Address</td><td>Date</td><td>Status</td></tr>");
 int i=1;       
while(rs.next())
{
int t=Integer.parseInt(rs.getString(6));
int quantity=Integer.parseInt(rs.getString(5));
String modname=rs.getString(4);
String stat=rs.getString(3);
//String recname=rs.getString(5);
String add=rs.getString(1);
//String mob=rs.getString(7);
String date=rs.getString(2);

out.println("<tr><td><b>"+i+"</b></td><td><b>"+modname+"</b></td><td><b>"+quantity+"</b></td><td><b>"+t+"</b></td><td><b>"+add+"</b></td><td><b>"+date+"</b></td><td><b>"+stat+"</b></td></tr>");
i++;
}
        
      out.write("\n");
      out.write("        \n");
      out.write("        <script src=\"js/plugins.js\"></script>\n");
      out.write("        <script src=\"js/main.js\"></script>\n");
      out.write("        \n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
